// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId           Int      @id @default(autoincrement()) @map("userId")
  email            String   @unique @map("email")
  password         String   @map("password")
  password_confirm String   @map("password_confirm")
  createdAt        DateTime @default(now()) @map("createdAt")
  updatedAt        DateTime @updatedAt @map("updatedAt")

  userInfos UserInfos? // 1:1
  resumes   Resumes[] // 1:N
  roletype  UserRoleType

  @@map("Users")
}

enum UserRoleType {
  USER
  ADMIN
}

model UserInfos {
  userInfoId   Int      @id @default(autoincrement()) @map("userInfoId")
  userId       Int      @unique @map("userId") // FK
  name         String   @map("name")
  age          Int?     @map("age")
  gender       String   @map("gender")
  profileImage String?  @map("profileImage")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("UserInfos")
}

model Resumes {
  resumeId  Int      @id @default(autoincrement()) @map("resumeId")
  userId    Int      @unique @map("userId") // FK
  title     String   @map("title")
  content   String   @map("content")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user   Users            @relation(fields: [userId], references: [userId], onDelete: Cascade)
  status ResumeStatusType

  @@map("Resumes")
}

enum ResumeStatusType {
  APPLY // 서류 지원완료
  DROP // 서류 탈락
  PASS // 서류 합격
  INTERVIEW1 // 1차 면접
  INTERVIEW2 // 2차 면접
  FINAL_PASS // 최종 합격
}
